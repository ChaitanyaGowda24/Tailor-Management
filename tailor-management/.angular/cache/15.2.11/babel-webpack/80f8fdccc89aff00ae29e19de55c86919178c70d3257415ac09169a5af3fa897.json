{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { OrderDetailsDialogComponent } from '../../components/order-details-dialog/order-details-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../services/order.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/table\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/datepicker\";\nfunction TailorHomeComponent_th_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1, \"Order ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TailorHomeComponent_td_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const order_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(order_r13.orderId);\n  }\n}\nfunction TailorHomeComponent_th_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1, \"Customer ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TailorHomeComponent_td_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const order_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(order_r14.customerId);\n  }\n}\nfunction TailorHomeComponent_th_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1, \"Due Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TailorHomeComponent_td_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const order_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, order_r15.deliveryDate, \"mediumDate\"), \" \");\n  }\n}\nfunction TailorHomeComponent_th_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1, \"Status\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TailorHomeComponent_td_51_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TailorHomeComponent_td_51_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const order_r16 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateStatus(order_r16));\n    });\n    i0.ɵɵtext(1, \" Update Status \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TailorHomeComponent_td_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 27)(1, \"mat-form-field\", 2)(2, \"mat-select\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function TailorHomeComponent_td_51_Template_mat_select_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const order_r16 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(order_r16.status = $event);\n    })(\"selectionChange\", function TailorHomeComponent_td_51_Template_mat_select_selectionChange_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const order_r16 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onStatusChange(order_r16));\n    });\n    i0.ɵɵelementStart(3, \"mat-option\", 9);\n    i0.ɵɵtext(4, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-option\", 10);\n    i0.ɵɵtext(6, \"Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-option\", 11);\n    i0.ɵɵtext(8, \"Picked Up\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-option\", 12);\n    i0.ɵɵtext(10, \"Rejected\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-option\", 13);\n    i0.ɵɵtext(12, \"Yet to Pick Up\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, TailorHomeComponent_td_51_button_13_Template, 2, 0, \"button\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const order_r16 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", order_r16.status);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", order_r16.statusChanged);\n  }\n}\nfunction TailorHomeComponent_th_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1, \"Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TailorHomeComponent_td_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 27)(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TailorHomeComponent_td_54_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const order_r24 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.openOrderDetails(order_r24));\n    });\n    i0.ɵɵtext(2, \" View Details \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TailorHomeComponent_tr_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 30);\n  }\n}\nfunction TailorHomeComponent_tr_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 31);\n  }\n}\nexport class TailorHomeComponent {\n  constructor(dialog, orderService, http // Inject HttpClient here\n  ) {\n    this.dialog = dialog;\n    this.orderService = orderService;\n    this.http = http;\n    // Table data source\n    this.dataSource = new MatTableDataSource();\n    // Original data to preserve unfiltered data\n    this.originalData = [];\n    // Columns to display in the table\n    this.displayedColumns = ['orderId', 'customerId', 'dueDate', 'status', 'actions'];\n    // Filter fields\n    this.orderIdFilter = '';\n    this.customerIdFilter = '';\n    this.dueDateFilter = null;\n    this.statusFilter = '';\n  }\n  ngOnInit() {\n    this.fetchOrders();\n  }\n  // Fetch orders for the logged-in tailor\n  fetchOrders() {\n    const tailorId = Number(localStorage.getItem('id')); // Get tailorId from local storage\n    if (tailorId) {\n      this.orderService.getOrdersByTailorId(tailorId).subscribe(orders => {\n        this.originalData = orders; // Store the original data\n        this.dataSource.data = orders; // Set the fetched orders as the table data source\n      }, error => {\n        console.error('Failed to fetch orders:', error);\n      });\n    }\n  }\n  // Apply filters\n  applyFilters() {\n    this.dataSource.data = this.originalData.filter(order => {\n      const orderDeliveryDate = new Date(order.deliveryDate).toDateString(); // Convert to Date object\n      const filterDueDate = this.dueDateFilter ? this.dueDateFilter.toDateString() : null;\n      return (!this.orderIdFilter || order.orderId.toString().includes(this.orderIdFilter)) && (!this.customerIdFilter || order.customerId.toString().includes(this.customerIdFilter)) && (!this.dueDateFilter || orderDeliveryDate === filterDueDate) && (!this.statusFilter || order.status === this.statusFilter);\n    });\n  }\n  // Clear filters\n  clearFilters() {\n    this.orderIdFilter = '';\n    this.customerIdFilter = '';\n    this.dueDateFilter = null;\n    this.statusFilter = '';\n    this.dataSource.data = this.originalData; // Reset to the original data\n  }\n  // Track status changes\n  onStatusChange(order) {\n    order.statusChanged = true; // Mark the status as changed\n  }\n\n  updateStatus(order) {\n    const url = `http://localhost:8084/orders/${order.orderId}/status`;\n    const tailorId = Number(localStorage.getItem('id'));\n    // Send the new status as a plain string\n    const body = `\"${order.status}\"`;\n    // First update the order status\n    this.http.put(url, body, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).subscribe(updatedOrder => {\n      console.log('Status updated successfully:', updatedOrder);\n      // Update local data\n      const index = this.originalData.findIndex(o => o.orderId === order.orderId);\n      if (index !== -1) {\n        this.originalData[index].status = updatedOrder.status;\n        this.originalData[index].statusChanged = false;\n      }\n      const filteredIndex = this.dataSource.data.findIndex(o => o.orderId === order.orderId);\n      if (filteredIndex !== -1) {\n        this.dataSource.data[filteredIndex].status = updatedOrder.status;\n        this.dataSource.data[filteredIndex].statusChanged = false;\n      }\n      // Send notification\n      const notificationData = {\n        tailorId: tailorId,\n        userId: order.customerId,\n        orderId: order.orderId,\n        message: `Your order #${order.orderId} is ${order.status}`,\n        status: 'UNREAD'\n      };\n      // Send notification to notification service\n      this.http.post('http://localhost:8087/notifications/add', notificationData).subscribe(response => {\n        console.log('Notification sent successfully:', response);\n      }, error => {\n        console.error('Failed to send notification:', error);\n      });\n    }, error => {\n      console.error('Failed to update status:', error);\n    });\n  }\n  // Open order details dialog\n  openOrderDetails(order) {\n    this.orderService.getOrderDetails(order.orderId).subscribe(orderDetails => {\n      this.dialog.open(OrderDetailsDialogComponent, {\n        width: '600px',\n        height: '80vh',\n        data: orderDetails,\n        autoFocus: false,\n        restoreFocus: true // Restore focus to the previously focused element after closing\n      });\n    }, error => {\n      console.error('Failed to fetch order details:', error);\n    });\n  }\n  static {\n    this.ɵfac = function TailorHomeComponent_Factory(t) {\n      return new (t || TailorHomeComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.OrderService), i0.ɵɵdirectiveInject(i3.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TailorHomeComponent,\n      selectors: [[\"app-tailor-home\"]],\n      decls: 57,\n      vars: 9,\n      consts: [[1, \"container\"], [1, \"filter-section\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", 3, \"ngModel\", \"matDatepicker\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"dueDatePicker\", \"\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"PENDING\"], [\"value\", \"COMPLETED\"], [\"value\", \"PICKED_UP\"], [\"value\", \"REJECTED\"], [\"value\", \"YET_TO_PICK_UP\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"orderId\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"customerId\"], [\"matColumnDef\", \"dueDate\"], [\"matColumnDef\", \"status\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n      template: function TailorHomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Tailor Home\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Order ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TailorHomeComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.orderIdFilter = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Customer ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TailorHomeComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.customerIdFilter = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"mat-form-field\", 2)(13, \"mat-label\");\n          i0.ɵɵtext(14, \"Due Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function TailorHomeComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.dueDateFilter = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"mat-datepicker-toggle\", 5)(17, \"mat-datepicker\", null, 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"mat-form-field\", 2)(20, \"mat-label\");\n          i0.ɵɵtext(21, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"mat-select\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function TailorHomeComponent_Template_mat_select_ngModelChange_22_listener($event) {\n            return ctx.statusFilter = $event;\n          });\n          i0.ɵɵelementStart(23, \"mat-option\", 8);\n          i0.ɵɵtext(24, \"All\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"mat-option\", 9);\n          i0.ɵɵtext(26, \"Pending\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"mat-option\", 10);\n          i0.ɵɵtext(28, \"Completed\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"mat-option\", 11);\n          i0.ɵɵtext(30, \"Picked Up\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"mat-option\", 12);\n          i0.ɵɵtext(32, \"Rejected\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"mat-option\", 13);\n          i0.ɵɵtext(34, \"Yet to Pick Up\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(35, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function TailorHomeComponent_Template_button_click_35_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵtext(36, \" Apply Filters \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function TailorHomeComponent_Template_button_click_37_listener() {\n            return ctx.clearFilters();\n          });\n          i0.ɵɵtext(38, \" Clear Filters \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"table\", 16);\n          i0.ɵɵelementContainerStart(40, 17);\n          i0.ɵɵtemplate(41, TailorHomeComponent_th_41_Template, 2, 0, \"th\", 18);\n          i0.ɵɵtemplate(42, TailorHomeComponent_td_42_Template, 2, 1, \"td\", 19);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(43, 20);\n          i0.ɵɵtemplate(44, TailorHomeComponent_th_44_Template, 2, 0, \"th\", 18);\n          i0.ɵɵtemplate(45, TailorHomeComponent_td_45_Template, 2, 1, \"td\", 19);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(46, 21);\n          i0.ɵɵtemplate(47, TailorHomeComponent_th_47_Template, 2, 0, \"th\", 18);\n          i0.ɵɵtemplate(48, TailorHomeComponent_td_48_Template, 3, 4, \"td\", 19);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(49, 22);\n          i0.ɵɵtemplate(50, TailorHomeComponent_th_50_Template, 2, 0, \"th\", 18);\n          i0.ɵɵtemplate(51, TailorHomeComponent_td_51_Template, 14, 2, \"td\", 19);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(52, 23);\n          i0.ɵɵtemplate(53, TailorHomeComponent_th_53_Template, 2, 0, \"th\", 18);\n          i0.ɵɵtemplate(54, TailorHomeComponent_td_54_Template, 3, 0, \"td\", 19);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(55, TailorHomeComponent_tr_55_Template, 1, 0, \"tr\", 24);\n          i0.ɵɵtemplate(56, TailorHomeComponent_tr_56_Template, 1, 0, \"tr\", 25);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(18);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.orderIdFilter);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.customerIdFilter);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.dueDateFilter)(\"matDatepicker\", _r0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"for\", _r0);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.statusFilter);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        }\n      },\n      dependencies: [i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.MatTable, i6.MatHeaderCellDef, i6.MatHeaderRowDef, i6.MatColumnDef, i6.MatCellDef, i6.MatRowDef, i6.MatHeaderCell, i6.MatCell, i6.MatHeaderRow, i6.MatRow, i7.MatFormField, i7.MatLabel, i7.MatSuffix, i8.MatSelect, i9.MatOption, i10.MatInput, i11.MatButton, i12.MatDatepicker, i12.MatDatepickerInput, i12.MatDatepickerToggle, i4.DatePipe],\n      styles: [\".container[_ngcontent-%COMP%] {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.filter-section[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  gap: 16px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdGFpbG9yLWhvbWUvdGFpbG9yLWhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLmZpbHRlci1zZWN0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDogMTZweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["MatTableDataSource","OrderDetailsDialogComponent","i0","TailorHomeComponent","constructor","dialog","orderService","http","ngOnInit","fetchOrders","tailorId","Number","localStorage","getItem","getOrdersByTailorId","subscribe","orders","originalData","dataSource","data","error","console","applyFilters","filter","order","orderDeliveryDate","Date","deliveryDate","toDateString","filterDueDate","dueDateFilter","orderIdFilter","orderId","toString","includes","customerIdFilter","customerId","statusFilter","status","clearFilters","onStatusChange","statusChanged","updateStatus","url","body","put","headers","updatedOrder","log","index","findIndex","o","filteredIndex","notificationData","userId","message","post","response","openOrderDetails","getOrderDetails","orderDetails","open","width","height","autoFocus","restoreFocus","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\My pc\\Desktop\\CAPSTONE-TEMP\\tailor-management\\src\\app\\pages\\tailor-home\\tailor-home.component.ts","C:\\Users\\My pc\\Desktop\\CAPSTONE-TEMP\\tailor-management\\src\\app\\pages\\tailor-home\\tailor-home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OrderDetailsDialogComponent } from '../../components/order-details-dialog/order-details-dialog.component';\r\nimport { OrderService } from '../../services/order.service'; // Import the OrderService\r\nimport { Order } from '../../models/order.model'; // Import the Order model\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\nselector: 'app-tailor-home',\r\ntemplateUrl: './tailor-home.component.html',\r\nstyleUrls: ['./tailor-home.component.css'],\r\n})\r\nexport class TailorHomeComponent implements OnInit {\r\n\r\n\r\n\r\n// Table data source\r\ndataSource = new MatTableDataSource<Order>();\r\n\r\n// Original data to preserve unfiltered data\r\noriginalData: Order[] = [];\r\n\r\n// Columns to display in the table\r\ndisplayedColumns: string[] = [\r\n'orderId',\r\n'customerId',\r\n'dueDate',\r\n'status',\r\n'actions',\r\n];\r\n\r\n// Filter fields\r\norderIdFilter: string = '';\r\ncustomerIdFilter: string = '';\r\ndueDateFilter: Date | null = null;\r\nstatusFilter: string = '';\r\n\r\nconstructor(\r\n    public dialog: MatDialog,\r\n    private orderService: OrderService,\r\n    private http: HttpClient // Inject HttpClient here\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchOrders();\r\n  }\r\n\r\n  // Fetch orders for the logged-in tailor\r\n  fetchOrders(): void {\r\n    const tailorId = Number(localStorage.getItem('id')); // Get tailorId from local storage\r\n    if (tailorId) {\r\n      this.orderService.getOrdersByTailorId(tailorId).subscribe(\r\n        (orders: Order[]) => {\r\n          this.originalData = orders; // Store the original data\r\n          this.dataSource.data = orders; // Set the fetched orders as the table data source\r\n        },\r\n        (error) => {\r\n          console.error('Failed to fetch orders:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Apply filters\r\n  applyFilters(): void {\r\n    this.dataSource.data = this.originalData.filter((order) => {\r\n      const orderDeliveryDate = new Date(order.deliveryDate).toDateString(); // Convert to Date object\r\n      const filterDueDate = this.dueDateFilter ? this.dueDateFilter.toDateString() : null;\r\n\r\n      return (\r\n        (!this.orderIdFilter ||\r\n          order.orderId.toString().includes(this.orderIdFilter)) &&\r\n        (!this.customerIdFilter ||\r\n          order.customerId.toString().includes(this.customerIdFilter)) &&\r\n        (!this.dueDateFilter || orderDeliveryDate === filterDueDate) &&\r\n        (!this.statusFilter || order.status === this.statusFilter)\r\n      );\r\n    });\r\n  }\r\n\r\n  // Clear filters\r\n  clearFilters(): void {\r\n    this.orderIdFilter = '';\r\n    this.customerIdFilter = '';\r\n    this.dueDateFilter = null;\r\n    this.statusFilter = '';\r\n    this.dataSource.data = this.originalData; // Reset to the original data\r\n  }\r\n\r\n// Track status changes\r\n  onStatusChange(order: Order): void {\r\n    order.statusChanged = true; // Mark the status as changed\r\n  }\r\n\r\n updateStatus(order: Order): void {\r\n  const url = `http://localhost:8084/orders/${order.orderId}/status`;\r\n  const tailorId = Number(localStorage.getItem('id'));\r\n  \r\n  // Send the new status as a plain string\r\n  const body = `\"${order.status}\"`;\r\n\r\n  // First update the order status\r\n  this.http.put<Order>(url, body, { headers: { 'Content-Type': 'application/json' } }).subscribe(\r\n    (updatedOrder: Order) => {\r\n      console.log('Status updated successfully:', updatedOrder);\r\n\r\n      // Update local data\r\n      const index = this.originalData.findIndex((o) => o.orderId === order.orderId);\r\n      if (index !== -1) {\r\n        this.originalData[index].status = updatedOrder.status;\r\n        this.originalData[index].statusChanged = false;\r\n      }\r\n\r\n      const filteredIndex = this.dataSource.data.findIndex((o) => o.orderId === order.orderId);\r\n      if (filteredIndex !== -1) {\r\n        this.dataSource.data[filteredIndex].status = updatedOrder.status;\r\n        this.dataSource.data[filteredIndex].statusChanged = false;\r\n      }\r\n\r\n      // Send notification\r\n      const notificationData = {\r\n        tailorId: tailorId,\r\n        userId: order.customerId,\r\n        orderId: order.orderId,\r\n        message: `Your order #${order.orderId} is ${order.status}`,\r\n        status: 'UNREAD'\r\n      };\r\n\r\n      // Send notification to notification service\r\n      this.http.post('http://localhost:8087/notifications/add', notificationData).subscribe(\r\n        response => {\r\n          console.log('Notification sent successfully:', response);\r\n        },\r\n        error => {\r\n          console.error('Failed to send notification:', error);\r\n        }\r\n      );\r\n    },\r\n    (error) => {\r\n      console.error('Failed to update status:', error);\r\n    }\r\n  );\r\n}\r\n\r\n\r\n  // Open order details dialog\r\n  openOrderDetails(order: Order): void {\r\n    this.orderService.getOrderDetails(order.orderId).subscribe(\r\n      (orderDetails: Order) => {\r\n        this.dialog.open(OrderDetailsDialogComponent, {\r\n          width: '600px', // Set a fixed width\r\n          height: '80vh', // Set a fixed height (80% of the viewport height)\r\n          data: orderDetails,\r\n          autoFocus: false, // Prevent auto-focusing on the first focusable element\r\n          restoreFocus: true, // Restore focus to the previously focused element after closing\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error('Failed to fetch order details:', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2>Tailor Home</h2>\r\n\r\n  <!-- Filter Section -->\r\n  <div class=\"filter-section\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Order ID</mat-label>\r\n      <input matInput [(ngModel)]=\"orderIdFilter\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Customer ID</mat-label>\r\n      <input matInput [(ngModel)]=\"customerIdFilter\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Due Date</mat-label>\r\n      <input matInput [(ngModel)]=\"dueDateFilter\" [matDatepicker]=\"dueDatePicker\" />\r\n      <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #dueDatePicker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Status</mat-label>\r\n      <mat-select [(ngModel)]=\"statusFilter\">\r\n        <mat-option value=\"\">All</mat-option>\r\n        <mat-option value=\"PENDING\">Pending</mat-option>\r\n        <mat-option value=\"COMPLETED\">Completed</mat-option>\r\n        <mat-option value=\"PICKED_UP\">Picked Up</mat-option>\r\n        <mat-option value=\"REJECTED\">Rejected</mat-option>\r\n        <mat-option value=\"YET_TO_PICK_UP\">Yet to Pick Up</mat-option>\r\n      \r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"applyFilters()\">\r\n      Apply Filters\r\n    </button>\r\n    <button mat-raised-button color=\"warn\" (click)=\"clearFilters()\">\r\n      Clear Filters\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Orders Table -->\r\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n    <!-- Order ID Column -->\r\n    <ng-container matColumnDef=\"orderId\">\r\n      <th mat-header-cell *matHeaderCellDef>Order ID</th>\r\n      <td mat-cell *matCellDef=\"let order\">{{ order.orderId }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Customer ID Column -->\r\n    <ng-container matColumnDef=\"customerId\">\r\n      <th mat-header-cell *matHeaderCellDef>Customer ID</th>\r\n      <td mat-cell *matCellDef=\"let order\">{{ order.customerId }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Due Date Column -->\r\n    <ng-container matColumnDef=\"dueDate\">\r\n      <th mat-header-cell *matHeaderCellDef>Due Date</th>\r\n      <td mat-cell *matCellDef=\"let order\">\r\n        {{ order.deliveryDate | date: 'mediumDate' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Status Column -->\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let order\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-select [(ngModel)]=\"order.status\" (selectionChange)=\"onStatusChange(order)\">\r\n            <mat-option value=\"PENDING\">Pending</mat-option>\r\n            <mat-option value=\"COMPLETED\">Completed</mat-option>\r\n            <mat-option value=\"PICKED_UP\">Picked Up</mat-option>\r\n            <mat-option value=\"REJECTED\">Rejected</mat-option>\r\n            <mat-option value=\"YET_TO_PICK_UP\">Yet to Pick Up</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <button\r\n          *ngIf=\"order.statusChanged\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          (click)=\"updateStatus(order)\"\r\n        >\r\n          Update Status\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Actions Column -->\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n      <td mat-cell *matCellDef=\"let order\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"openOrderDetails(order)\">\r\n          View Details\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}